# General cluster-level information
cluster:
  # Used in the proxy to specify the certs to use there.
  # Used in proxy-custom-ca-cm.yaml in turn used by proxy.yaml
    ca:
        {% if not (cluster["ca"] is none) %}
        configMapName: {{ cluster.ca.configMapName }}
        content: |-
        {{ cluster.ca.content | indent(8) }}
        {% endif %}
    {% if cluster["ingress"] is defined %}
    ingress:
        secretName: {{ cluster.ingress.secretName }}
        cert: |- # The content of the ssl cert to use for ingress
        {{ cluster.ingress.cert | indent(8) }}
        key: |- # The content of the ssl cert key to use for ingress
        {{ cluster.ingress.key | indent(8) }}
    {% endif %}

mtv:
    enabled: {{ mtv.enabled if mtv["enabled"] is defined else true }}
    # catalog_source: {{ mtv.catalog_source if mtv["catalog_source"] is defined else "cs-redhat-operator-index-v4-16" }}
    catalog_source: redhat-operators
    target_namespace: {{ mtv.target_namespace if mtv["target_namespace"] is defined else "openshift-mtv" }}
    controller_max_vm_inflight: {{ mtv.controller_max_vm_inflight if mtv["controller_max_vm_inflight"] is defined else "20" }}
    # these values will need to be replaced by actual vcenter info in order to pull over VMs from that source
    provider:
        name: mtv-provider
        secret: mtv-secret
        url: https://mtv-url/sdk
        endpoint: mtv-endpoint
        init_image: mtv-registry/init/image:1

namespace:
    - ns: openshift-mtv
    - ns: openshift-nmstate
  
nmstate:
    enabled: true
    # catalog_source: cs-redhat-operator-index-v4-16
    catalog_source: redhat-operators
    target_namespace: openshift-nmstate

nncps:
  bond:
    name: bond0
    bond:
      ports:
        - ens2f0
        - ens2f1
        - ens3f0  
        - ens3f1
        # etc
    vlans:
      - id: 677
      - id: 58
      - id: 670
      # etc
  nodes:
    - name: bond-ips
      node: master-0
      vlans:
        - id: 672
          ip: 192.168.1.1

# LDAP configuration.
# Used in:
#  - ldap-accounts.yaml
#  - ldap-bind-secret.yaml
#  - ldap-oauth-provider.yaml
ldap:
#  # The name of the LDAPSyncConfig (ldap-accounts.yaml)
#  syncConfigName: foo
#  accountName: sAMAccountName
#  bindDN: # like some.svc.ocp
#  bindPW: foo # plaintext password to access LDAP server
#  server:
#    name: # like NAME LDAP
#    urlFull: # like: ldap://fdqn/dn?accountName
#    urlShort: # like: ldap://fdqn
#  groupUIDNameMapping: '"cn=foo,ou=bar": foo' # Like "cn=foo,ou=bar...": bar
#  queries:
#    group:
#      baseDN: # Like "cn=foo,ou=bar..."
#    user:
#      baseDN: # Like "cn=foo,ou=bar..."
#      filter: # Like "(cn=foo,ou=bar...)"

# Chrony configuration.
# The chrony configuration defined in configContent is applied to all OCP nodes with each of the roles specified.
# Used in:
#  - chrony-configuration.yaml
chrony:
  roles:
    - role: master
    - role: worker
  configContent: |-
    # EXAMPLE chrony config
    server pool.ntp.org iburst
    driftfile /var/lib/chrony/drift
    makestep 10 3
    rtcsync

# Storage settings for the cluster.
# Used in trident-sc.yaml, trident-nad.yaml
storage:
  # The location of the trident/netapp host
  provisioner: csi.trident.netapp.io
  nad:
    mgmtAddress: "192.168.1.10/24"
    masterBond: "bond0.672"

