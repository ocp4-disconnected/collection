---
- name: Monitor OpenShift installation bootstrap process
  ansible.builtin.command:
    cmd: "{{ 'openshift-install-fips' if common_fips_enabled else 'openshift-install' }} --dir {{ common_openshift_cluster_install_dir }} agent wait-for bootstrap-complete --log-level={{ log_level }}"
  register: bootstrap_output

- name: Check status of cluster bootstrap
  debug:
    msg: "{{ bootstrap_output.stderr_lines[-1] }}"
  when: bootstrap_output.stderr is search(bootstrap_complete_text)

- name: Monitor node health
  ansible.builtin.shell:
    cmd: "{{ oc_command_node_status}}"
  register: node_status
  retries: 240
  delay: 15 #240 retries at 15 seconds = 1 hour timeout
  until: node_status.stdout >= node_count

- name: Node Status
  ansible.builtin.debug:
    msg: "Node ready count is: {{node_status.stdout}}"
  when: node_status.stdout >= node_count

- name: Monitor cluster operator status
  ansible.builtin.shell: |
    operators_found=$(oc get co --no-headers | grep {{ common_openshift_release }} | wc -l)
    
    operators_unhealthy=$(oc get co --no-headers | grep {{ common_openshift_release }} | awk '$3 != "True" || $4 == "True" || $5 == "True"' | wc -l)
    
    if [ $operators_found -eq 0 ]; then
      echo "Bad output for oc get co"
    else
      echo "Operators Count (Total): $operators_found"
    fi

    if [ $operators_unhealthy -ne 0 ]; then
      echo "Bad operator status found"
    else
      echo "Operators Count (UNHEALTHY): $operators_unhealthy"
    fi
    
    echo $(oc get co)
  register: co_status
  retries: 240
  delay: 15 #240 retries at 15 seconds = 1 hour timeout
  until: '"Bad" not in co_status.stdout'

- name: Cluster Operator Status
  ansible.builtin.debug:
    msg: 
      - "Cluster operators in appropriate state"
      - "{{ co_status.stdout_lines }}"

