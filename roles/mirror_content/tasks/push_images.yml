---
- name: Set fact for {{ common_ip_space }} IPv4 address
  set_fact:
    ipv4_address: "{{ ansible_all_ipv4_addresses | select('match', '^' + common_ip_space + '\\.') | list }}"
  when: ipv4_address is undefined

- name: push {{ image_source }} images into registry with oc-mirror v1
  ansible.builtin.command:
    cmd: "oc-mirror --from {{ common_openshift_oc_mirror_dir }}/{{ image_source }} \
      docker://{{ ipv4_address | first }}:{{ common_registry_port }}"
  register: push_images_v1
  retries: 5
  delay: 10
  until: push_images_v1.rc == 0
  when: not common_oc_mirror_v2 | default(false) | bool

- name: push {{ image_source }} images into registry with oc-mirror v2
  ansible.builtin.shell: |
    oc-mirror --from file://{{ common_openshift_oc_mirror_dir }}/{{ image_source }} \
      --config {{ common_openshift_oc_mirror_dir }}/{{ image_source }}.yml \
      docker://{{ ipv4_address | first }}:{{ common_registry_port }} --v2
  environment:
    OC_MIRROR_CACHE: "{{ common_openshift_oc_mirror_dir }}/.cache"
    OCP_SIGNATURE_VERIFICATION_PK: "{{ common_openshift_oc_mirror_dir }}/pgpkey"
  register: push_images_v2
  retries: 5
  delay: 10
  until: push_images_v2.rc == 0
  when: common_oc_mirror_v2 | bool

- name: Remove push dirs
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ common_openshift_oc_mirror_dir }}/{{ item.split ('.')[0] }}/oc-mirror-workspace"
    - "{{ common_openshift_oc_mirror_dir }}/.cache"
  when: template_result.changed | bool